---
/**
 * Blog Card Component with Firebase and Internationalization
 *
 * Displays an individual blog post as a card with image, title, summary, author info, and metadata.
 * Now uses Firebase data with internationalization support.
 *
 * Features:
 * - Responsive card layout with featured image
 * - Author information with avatar and name
 * - Formatted publication date using date-fns
 * - Fallback images for missing post images and author avatars
 * - SEO-friendly links using post slugs
 * - Internationalized content and links
 * - Truncated summary with localized "read more" link
 *
 * @component BlogCard
 * @requires date-fns - For date formatting functionality
 * @param {LocalizedBlog} blog - Localized blog post data object
 * @since 2.0.0
 */

import { format } from "date-fns";
import { Image } from "astro:assets";
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../utils/i18n';
import type { LocalizedBlog } from '../types/firebase';

/**
 * Component props interface
 * @property {LocalizedBlog} blog - Localized blog post data to display
 */
const { blog } = Astro.props as { blog: LocalizedBlog };

/**
 * Destructure blog data for easier access
 * Extracts all necessary fields from the blog object and author nested object
 */
const {
  slug,
  title,
  summary,
  imageUrl,
  createdAt,
  author: { name: authorName, avatarUrl },
  tags
} = blog;

/**
 * Featured image source with fallback
 * Uses fallback image if blog has no featured image
 * @constant {string}
 */
const imgSrc = imageUrl ? encodeURI(imageUrl) : "/fallback-post-image.png";

/**
 * Author avatar source with fallback
 * Uses fallback avatar if author has no profile picture
 * @constant {string}
 */
const avatarSrc = avatarUrl ? encodeURI(avatarUrl) : "/fallback-avatar.png";

let lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Function to generate localized links
function getLocalizedLink(path: string) {
  return getLocalizedPath(path, lang);
}
---

<!-- 
  Blog Card Article Element
  
  Semantic HTML5 article element representing a single blog post card.
  Contains clickable featured image, post metadata, and content preview.
  Designed for use in blog listing grids and search results.
-->

<article
  class="card blog-card group cursor-pointer bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 overflow-hidden border border-gray-100/50 hover:border-blue-200/50 hover:-translate-y-2 relative"
  data-tags={tags.map((t) => t.toUpperCase()).join(",")}
  data-title={title.toLowerCase()}
  data-summary={summary.toLowerCase()}
  data-content={summary.toLowerCase()}
  data-author={authorName.toLowerCase()}
  data-slug={slug.toLowerCase()}
>
  <!-- Featured image link to full post -->
  <a href={getLocalizedLink(`/blog/${slug}`)} class="block">
    <div class="relative overflow-hidden h-48">
      <Image
        src={imgSrc}
        alt={title}
        class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110 group-hover:brightness-110"
        width={400}
        height={220}
        loading="lazy"
      />
      
      <!-- Gradient overlay -->
      <div class="absolute inset-0 bg-gradient-to-b from-blue-600/5 via-transparent to-slate-900/30"></div>
      
      <!-- Featured indicator if needed -->
      {blog.featured && (
        <div class="absolute top-4 left-4 bg-gradient-to-r from-blue-600 to-blue-700 text-white px-3 py-1.5 rounded-xl text-xs font-bold shadow-xl">
          <div class="flex items-center space-x-1">
            <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
            </svg>
            <span>{t('blog.featured')}</span>
          </div>
        </div>
      )}
    </div>
  </a>

  <!-- Card content container -->
  <div class="p-6 space-y-4">
    <!-- Post title -->
    <a href={getLocalizedLink(`/blog/${slug}`)} class="block">
      <h3 class="text-xl font-bold text-slate-900 group-hover:text-blue-600 transition-colors duration-300 leading-tight line-clamp-2">
        {title}
      </h3>
    </a>
    
    <!-- Post summary -->
    <p class="text-slate-600 text-sm leading-relaxed line-clamp-3 font-medium">
      {summary}
    </p>

    <!-- Post metadata: author info and publication date -->
    <div class="flex items-center justify-between pt-2 border-t border-gray-100">
      <div class="flex items-center space-x-3">
        <Image
          src={avatarSrc}
          alt={authorName}
          class="w-8 h-8 rounded-full border-2 border-white shadow-sm"
          width={32}
          height={32}
        />
        <div>
          <span class="text-sm font-medium text-slate-700">{authorName}</span>
          <!-- Semantic time element with formatted date -->
          <time class="block text-xs text-slate-500" datetime={createdAt}>
            {format(new Date(createdAt), "MMM d, yyyy")}
          </time>
        </div>
      </div>

      <!-- Read more link -->
      <a 
        href={getLocalizedLink(`/blog/${slug}`)} 
        class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-50 to-blue-100/50 group-hover:from-blue-100 group-hover:to-blue-150 text-blue-700 group-hover:text-blue-800 px-4 py-2.5 rounded-xl font-semibold text-sm transition-all duration-300 border border-blue-200/50 group-hover:border-blue-300/50 shadow-sm group-hover:shadow-md"
      >
        <span class="tracking-wide">{t('blog.read_more')}</span>
        <svg class="w-4 h-4 transition-all duration-300 group-hover:translate-x-0.5 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
        </svg>
      </a>
    </div>

    <!-- Tags (if any) -->
    {tags && tags.length > 0 && (
      <div class="flex flex-wrap gap-1 pt-2">
        {tags.slice(0, 3).map((tag: string) => (
          <span class="inline-block bg-gray-100 text-gray-600 px-2 py-1 rounded-md text-xs font-medium">
            #{tag}
          </span>
        ))}
        {tags.length > 3 && (
          <span class="inline-block text-gray-400 px-2 py-1 text-xs">
            +{tags.length - 3} {t('blog.more_tags')}
          </span>
        )}
      </div>
    )}
  </div>
  
  <!-- Subtle decorative element -->
  <div class="absolute bottom-0 right-0 w-20 h-20 bg-gradient-to-br from-blue-50/50 to-transparent rounded-tl-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>