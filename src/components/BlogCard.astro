---
/**
 * Blog Card Component
 *
 * Displays an individual blog post as a card with image, title, summary, author info, and metadata.
 * Provides clickable links to the full blog post and handles fallback images for missing content.
 *
 * Features:
 * - Responsive card layout with featured image
 * - Author information with avatar and name
 * - Formatted publication date using date-fns
 * - Fallback images for missing post images and author avatars
 * - SEO-friendly links using post slugs
 * - Truncated summary with "read more" link
 *
 * @component BlogCard
 * @requires date-fns - For date formatting functionality
 * @param {PostType} post - Blog post data object
 * @since 1.0.0
 */

import { format } from "date-fns";

import { Image } from "astro:assets";
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../utils/i18n';


/**
 * Tag interface for blog post categorization
 * Represents a tag associated with blog posts
 *
 * @interface TagType
 * @property {string} id - Unique identifier for the tag
 * @property {string} name - Display name of the tag
 */
interface TagType {
  id: string;
  name: string;
}

/**
 * Author interface for blog post creators
 * Represents author information with optional avatar
 *
 * @interface AuthorType
 * @property {string} id - Unique identifier for the author
 * @property {string} name - Full name of the author
 * @property {string} [avatarUrl] - Optional author avatar image URL
 */
interface AuthorType {
  id: string;
  name: string;
  avatarUrl?: string;
}

/**
 * Post interface for blog post data
 * Represents a blog post with all necessary display information
 *
 * @interface PostType
 * @property {string} slug - URL-friendly identifier for the post
 * @property {string} title - Post title
 * @property {string} summary - Brief post summary/excerpt
 * @property {string|null} imageUrl - Featured image URL (can be null)
 * @property {string} createdAt - ISO date string of post creation
 * @property {AuthorType} author - Post author information
 * @property {TagType[]} tags - Array of associated tags
 */
interface PostType {
  slug: string;
  title: string;
  summary: string;
  imageUrl: string | null;
  createdAt: string;
  author: AuthorType;
  tags: TagType[];
}

/**
 * Component props interface
 * @property {PostType} post - Blog post data to display
 */
const { post } = Astro.props as { post: PostType };

/**
 * Destructure post data for easier access
 * Extracts all necessary fields from the post object and author nested object
 */
const {
  slug,
  title,
  summary,
  imageUrl,
  createdAt,
  author: { name: authorName, avatarUrl },
} = post;

/**
 * Featured image source with fallback
 * Uses fallback image if post has no featured image
 * @constant {string}
 */
const imgSrc = imageUrl ? encodeURI(imageUrl) : "/fallback-post-image.png";

/**
 * Author avatar source with fallback
 * Uses fallback avatar if author has no profile picture
 * @constant {string}
 */
const avatarSrc = avatarUrl ? encodeURI(avatarUrl) : "/fallback-avatar.png";

let lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<!-- 
  Blog Card Article Element
  
  Semantic HTML5 article element representing a single blog post card.
  Contains clickable featured image, post metadata, and content preview.
  Designed for use in blog listing grids and search results.
-->


<article
  class="card post-card"
  data-tags={post.tags.map((t) => t.name.toUpperCase()).join(",")}
  data-title={post.title.toLowerCase()}
  data-summary={post.summary.toLowerCase()}
  data-content={post.summary.toLowerCase()}
  data-author={post.author.name.toLowerCase()}
  data-slug={post.slug.toLowerCase()}
>
  <!-- Featured image link to full post -->
  <a href={getLocalizedLink(`/blog/${slug}`)}>
    <Image
      src={imgSrc}
      alt={title}
      class="card-image"
      width={400}
      height={220}
    />
  </a>

  <!-- Card content container -->
  <div class="card-content">
    <!-- Post title -->
    <h3 class="card-title">{title}</h3>

    <!-- Post metadata: author info and publication date -->
    <div class="card-meta">
      <Image
        src={avatarSrc}
        alt={authorName}
        class="author-avatar"
        width={28}
        height={28}
      />
      <span class="author-name">{authorName}</span>
    </div>
    <!-- Semantic time element with formatted date -->
    <time class="card-date" datetime={createdAt}>
      {format(new Date(createdAt), "LLL d, yyyy h:mm a")}
    </time>

    <!-- Post summary/excerpt -->
    <p class="card-summary">{summary}</p>

    <!-- Read more link to full post -->
    <a href={getLocalizedLink(`/blog/${slug}`)} class="read-more">{t('member_info_detailed.read_more')}</a>
  </div>
</article>
