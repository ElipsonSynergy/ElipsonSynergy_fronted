---
import BlogsListBanner from "../../components/BlogsListBanner.astro";
import BlogCard from "../../components/BlogCard.astro";
import BaseLayout from '../../layouts/BaseLayout.astro';
import { useTranslations, languages, getLangFromUrl } from '../../utils/i18n';

export async function getStaticPaths() {
  return Object.keys(languages).map((loc) => ({
    params: { locate: loc },
  }));
}

let lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

/**
 * Interfaces
 */
interface TagType {
  id: string;
  name: string;
}

interface AuthorType {
  id: string;
  name: string;
  bio?: string;
  avatarUrl?: string;
}

interface PostType {
  id: string;
  slug: string;
  title: string;
  summary: string;
  content: string;
  imageUrl: string | null;
  createdAt: string;
  updatedAt: string;
  author: AuthorType;
  tags: TagType[];
}

/**
 * Simulated data (mocked)
 */
const tagsData: TagType[] = [
  { id: "1", name: "React" },
  { id: "2", name: "Astro" },
  { id: "3", name: "JavaScript" },
];

const posts: PostType[] = [
  {
    id: "1",
    slug: "introduccion-a-astro",
    title: "Introducci√≥n a Astro",
    summary: "Aprende los fundamentos de Astro para crear sitios web r√°pidos.",
    content: "Contenido completo del art√≠culo...",
    imageUrl: null,
    createdAt: "2025-08-01T10:00:00Z",
    updatedAt: "2025-08-01T10:00:00Z",
    author: {
      id: "a1",
      name: "Shaday Dev",
      bio: "Desarrolladora frontend apasionada por Astro.",
      avatarUrl: undefined,
    },
    tags: [
      { id: "2", name: "Astro" },
      { id: "3", name: "JavaScript" },
    ],
  },
  {
    id: "2",
    slug: "react-vs-vue",
    title: "React vs Vue",
    summary: "Comparaci√≥n detallada entre React y Vue.",
    content: "Comparativa completa...",
    imageUrl: null,
    createdAt: "2025-07-20T12:30:00Z",
    updatedAt: "2025-07-20T12:30:00Z",
    author: {
      id: "a2",
      name: "Juan P√©rez",
      bio: "Ingeniero de software especializado en frontend.",
      avatarUrl: undefined,
    },
    tags: [
      { id: "1", name: "React" },
      { id: "3", name: "JavaScript" },
    ],
  },
];

/**
 * Par√°metros de URL
 */
const url = new URL(Astro.request.url);
const search = url.searchParams.get("search")?.toLowerCase() || "";
const tag = url.searchParams.get("tag") || "All";
const pageNum = parseInt(url.searchParams.get("page") || "1", 10);

/**
 * Paginaci√≥n y l√≥gica de filtrado
 */
const pageSize = 9;
const allTags: string[] = ["All", ...tagsData.map((t) => t.name.toUpperCase())];

const filtered = posts.filter(
  (p) =>
    (p.title.toLowerCase().includes(search) ||
      p.summary.toLowerCase().includes(search)) &&
    (tag === "All" || p.tags.some((t) => t.name.toUpperCase() === tag)),
);

const total = filtered.length;
const totalPages = Math.ceil(total / pageSize);
const start = (pageNum - 1) * pageSize;
const slice: PostType[] = filtered.slice(start, start + pageSize);
---

<BaseLayout title={t('blog_page_meta.title')} description={t('blog_page_meta.description')}>

  <!-- Hero / Banner -->
  <section class="py-20 bg-gradient-to-r from-blue-50 to-indigo-100 text-center">
    <h1 class="text-5xl font-bold text-slate-900 mb-4">{t('blogPage.hero.title')}</h1>
    <p class="text-xl text-slate-600 mb-2">{t('blogPage.hero.subtitle')}</p>
    <p class="max-w-2xl mx-auto text-slate-500">{t('blogPage.hero.description2')}</p>
  </section>

  <!-- Search and Filter -->
  <section class="bg-white py-12">
    <div class="max-w-4xl mx-auto px-4">
      <form method="get" class="mb-6">
        <input
          type="text"
          name="search"
          value={search}
          placeholder="Buscar..."
          class="w-full border border-slate-300 rounded-lg px-4 py-3 text-lg focus:ring-2 focus:ring-blue-500"
        />
      </form>

      <div class="flex flex-wrap gap-2 justify-center">
        {allTags.map((t) => (
          <a
            href={`?tag=${encodeURIComponent(t)}&search=${encodeURIComponent(search)}`}
            class={`px-4 py-2 rounded-full border text-sm font-semibold ${
              t === tag
                ? "bg-indigo-600 text-white"
                : "bg-slate-100 text-slate-700 hover:bg-slate-200"
            }`}
          >
            {t}
          </a>
        ))}
      </div>
    </div>
  </section>

  <!-- Blog List -->
  <section class="bg-slate-50 py-16">
    <div class="max-w-6xl mx-auto px-4">
      {slice.length === 0 ? (
        <div class="text-center text-slate-500 text-xl">
          {t('blogPage.noResults.title')} üòï
        </div>
      ) : (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {slice.map((post) => <BlogCard post={post} />)}
        </div>
      )}
    </div>
  </section>

  <!-- Pagination -->
  {totalPages > 1 && (
    <section class="py-10 bg-white">
      <div class="flex justify-center gap-2">
        {pageNum > 1 && (
          <a
            href={`?page=${pageNum - 1}&tag=${encodeURIComponent(tag)}&search=${encodeURIComponent(search)}`}
            class="px-4 py-2 rounded-lg border bg-slate-100 hover:bg-slate-200"
          >
            ‚Üê Anterior
          </a>
        )}

        {Array.from({ length: totalPages }, (_, i) => (
          <a
            href={`?page=${i + 1}&tag=${encodeURIComponent(tag)}&search=${encodeURIComponent(search)}`}
            class={`px-4 py-2 rounded-lg border ${
              i + 1 === pageNum
                ? "bg-indigo-600 text-white"
                : "bg-white hover:bg-slate-100"
            }`}
          >
            {i + 1}
          </a>
        ))}

        {pageNum < totalPages && (
          <a
            href={`?page=${pageNum + 1}&tag=${encodeURIComponent(tag)}&search=${encodeURIComponent(search)}`}
            class="px-4 py-2 rounded-lg border bg-slate-100 hover:bg-slate-200"
          >
            Siguiente ‚Üí
          </a>
        )}
      </div>
    </section>
  )}
</BaseLayout>
