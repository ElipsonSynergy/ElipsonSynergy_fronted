---
import Layout from '@/layouts/Layout.astro';
import { reactJsonToHtmlString } from '@/lib/reactToHtml';
import BlogCard from '@/components/BlogCard.astro';

// Obtener el parámetro de la URL
const { id } = Astro.params;

/**
 * Simulación de datos locales
 */
const blogs = [
  {
    id: "1",
    slug: "introduccion-a-astro",
    title: "Introducción a Astro",
    description: "Aprende los fundamentos de Astro para crear sitios web rápidos.",
    content: [{ type: "paragraph", children: [{ text: "Este es el contenido completo de Astro." }] }],
    image: "https://source.unsplash.com/featured/?astro,webdev",
    date: "2025-08-01T10:00:00Z",
    author: "Shaday Dev",
    labels: ["Astro", "JavaScript"]
  },
  {
    id: "2",
    slug: "react-vs-vue",
    title: "React vs Vue",
    description: "Comparación detallada entre React y Vue.",
    content: [{ type: "paragraph", children: [{ text: "Ambos frameworks tienen sus ventajas..." }] }],
    image: "https://source.unsplash.com/featured/?react,vue",
    date: "2025-07-20T12:30:00Z",
    author: "Juan Pérez",
    labels: ["React", "Vue", "Comparativa"]
  },
  {
    id: "3",
    slug: "javascript-tips",
    title: "10 Tips de JavaScript que debes conocer",
    description: "Mejora tu código JS con estos trucos.",
    content: [{ type: "paragraph", children: [{ text: "Consejo 1: Usa destructuring..." }] }],
    image: "https://source.unsplash.com/featured/?javascript,code",
    date: "2025-06-15T14:00:00Z",
    author: "Ana Torres",
    labels: ["JavaScript", "Tips"]
  },
];

// Buscar el blog actual por ID
const blog = blogs.find((b) => b.id === id);

// Convertir contenido JSON a HTML si existe
const htmlContent = blog ? reactJsonToHtmlString(JSON.stringify(blog.content)) : null;

// Excluir el blog actual de la lista para mostrar artículos relacionados
const blogsFiltered = blogs.filter((b) => b.id !== blog?.id).slice(0, 5);
---

<Layout title={blog?.title || "Blog no encontrado"}>
  {blog ? (
    <section class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-20">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-12">
        
        <!-- Contenido principal -->
        <div class="col-span-2 space-y-10">
          <div class="text-center">
            <h1 class="text-4xl font-bold text-gray-900">{blog.title}</h1>
            <p class="text-lg text-gray-500">{blog.description}</p>
          </div>

          <img src={blog.image} alt={blog.title} class="w-full h-auto rounded-xl" />

          <div class="prose max-w-none prose-lg" set:html={htmlContent}></div>

          {blog.labels?.length && (
            <div class="flex flex-wrap gap-2 mt-6">
              {blog.labels.map((label: string) => (
                <span class="inline-block bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm">
                  #{label}
                </span>
              ))}
            </div>
          )}

          <div class="text-sm text-gray-500">
            Publicado el: {new Date(blog.date).toLocaleDateString()}
          </div>

          <div class="border-t pt-6 mt-6">
            <p class="text-gray-600">Autor: {blog.author}</p>
          </div>
        </div>

        <!-- Barra lateral -->
        <aside class="col-span-1">
          <div class="bg-gray-100 p-6 rounded-lg">
            <h2 class="text-xl font-bold mb-4">Artículos Populares</h2>
            <div class="space-y-4">
              {blogsFiltered.map((blogItem) => (
                <BlogCard blog={blogItem} />
              ))}
            </div>
          </div>
        </aside>

      </div>
    </section>
  ) : (
    <div class="text-center py-20 text-red-600 font-semibold text-xl">
      Blog no encontrado.
    </div>
  )}
</Layout>
