---
// proyecto/[id].astro - Project detail page
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { projectsI18n, getLocalizedProjects } from '../../../data/projects-i18n';
import { useTranslations, languages, getLangFromUrl, getLocalizedPath } from '../../../utils/i18n';

export async function getStaticPaths() {
  const paths: any[] = [];
  
  // Generate paths for each language and each project
  Object.keys(languages).forEach((lang) => {
    projectsI18n.forEach((project) => {
      paths.push({
        params: { 
          locate: lang,
          id: project.id 
        },
        props: { 
          project,
          lang 
        }
      });
    });
  });
  
  return paths;
}

// Get params from URL
const { locate, id } = Astro.params;
const langFromUrl = locate || getLangFromUrl(Astro.url);
const lang = (langFromUrl in languages) ? langFromUrl as keyof typeof languages : 'es';
const t = useTranslations(lang);

// Find the project by ID
const project = projectsI18n.find(p => p.id === id);

if (!project) {
  return Astro.redirect('/404');
}

// Function to generate localized links
function getLocalizedLink(path: string) {
  return getLocalizedPath(path, lang);
}

// Get localized project data
const localizedProject = {
  id: project.id,
  title: project.title[lang],
  description: project.description[lang],
  image: project.image,
  category: project.category,
  tags: project.tags[lang],
  featured: project.featured
};

// Generate thematic image URLs based on category
const getThematicImage = (category: string) => {
  const images = {
    agro: 'https://images.unsplash.com/photo-1625246333195-78d9c38ad449?w=1200&h=600&fit=crop&crop=center&auto=format&q=85',
    jovenes: 'https://images.unsplash.com/photo-1529390079861-591de354faf5?w=1200&h=600&fit=crop&crop=center&auto=format&q=85',
    store: 'https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=1200&h=600&fit=crop&crop=center&auto=format&q=85',
    makers: 'https://images.unsplash.com/photo-1581092918056-0c4c3acd3789?w=1200&h=600&fit=crop&crop=center&auto=format&q=85',
    software: 'https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=1200&h=600&fit=crop&crop=center&auto=format&q=85'
  };
  return images[category as keyof typeof images] || images.software;
};

// Get other projects in the same category
const allLocalizedProjects = getLocalizedProjects(lang);
const relatedProjects = allLocalizedProjects
  .filter(p => p.category === localizedProject.category && p.id !== localizedProject.id)
  .slice(0, 3);

---

<BaseLayout 
  title={`${localizedProject.title} - ${t('project_detail.meta.title_suffix')}`}
  description={localizedProject.description}
  keywords={`${localizedProject.tags.join(', ')}, ${t('project_detail.meta.keywords')}`}
>
  <!-- Back Navigation -->
  <nav class="bg-white border-b border-gray-100 sticky top-0 z-40 backdrop-blur-lg bg-white/95">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <a 
        href={getLocalizedLink('/producto')}
        class="inline-flex items-center space-x-2 text-slate-600 hover:text-blue-600 transition-colors duration-200 group"
      >
        <svg class="w-5 h-5 transition-transform duration-200 group-hover:-translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        <span class="font-medium">{t('project_detail.navigation.back_to_projects')}</span>
      </a>
    </div>
  </nav>

  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 overflow-hidden">
    <!-- Background Effects -->
    <div class="absolute inset-0">
      <div class="absolute top-0 left-0 w-96 h-96 bg-gradient-to-br from-blue-100/50 to-transparent rounded-full -translate-x-48 -translate-y-48 blur-3xl"></div>
      <div class="absolute bottom-0 right-0 w-96 h-96 bg-gradient-to-tl from-indigo-100/50 to-transparent rounded-full translate-x-48 translate-y-48 blur-3xl"></div>
    </div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 lg:py-24">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <!-- Content -->
        <div class="space-y-8">
          <!-- Category Badge -->
          <div class="inline-flex items-center space-x-2 bg-white/80 backdrop-blur-sm text-slate-700 px-4 py-2 rounded-2xl text-sm font-semibold shadow-lg border border-white/50">
            {localizedProject.category === 'agro' && (
              <>
                <span class="text-green-600">üåæ</span>
                <span>{t('ProjectCard.Agro')}</span>
              </>
            )}
            {localizedProject.category === 'jovenes' && (
              <>
                <span class="text-purple-600">üë•</span>
                <span>{t('ProjectCard.Youngs')}</span>
              </>
            )}
            {localizedProject.category === 'store' && (
              <>
                <span class="text-orange-600">üõçÔ∏è</span>
                <span>{t('ProjectCard.Store')}</span>
              </>
            )}
            {localizedProject.category === 'makers' && (
              <>
                <span class="text-amber-600">üîß</span>
                <span>{t('ProjectCard.Makers')}</span>
              </>
            )}
            {localizedProject.category === 'software' && (
              <>
                <span class="text-blue-600">üíª</span>
                <span>{t('ProjectCard.Software')}</span>
              </>
            )}
          </div>

          <!-- Featured Badge -->
          {localizedProject.featured && (
            <div class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-xl text-sm font-bold shadow-xl">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
              </svg>
              <span>{t('ProjectCard.Outstanding')}</span>
            </div>
          )}

          <!-- Title -->
          <h1 class="text-4xl lg:text-5xl xl:text-6xl font-black text-slate-900 leading-tight tracking-tight">
            {localizedProject.title}
          </h1>

          <!-- Description -->
          <p class="text-xl text-slate-600 leading-relaxed">
            {localizedProject.description}
          </p>

          <!-- Tags -->
          <div class="flex flex-wrap gap-2">
            {localizedProject.tags.map((tag: string) => (
              <span class="bg-white/60 backdrop-blur-sm text-slate-700 px-3 py-1.5 rounded-lg text-sm font-medium border border-white/20">
                {tag}
              </span>
            ))}
          </div>

          <!-- Status -->
          <div class="flex items-center space-x-3">
            <div class="flex items-center space-x-2">
              <div class="w-3 h-3 bg-emerald-500 rounded-full animate-pulse"></div>
              <span class="text-sm font-medium text-slate-600">{t('ProjectCard.Active')}</span>
            </div>
          </div>
        </div>

        <!-- Project Image -->
        <div class="relative">
          <div class="relative overflow-hidden rounded-3xl shadow-2xl bg-white p-2">
            <img 
              src={getThematicImage(localizedProject.category)}
              alt={localizedProject.title}
              class="w-full h-80 lg:h-96 object-cover rounded-2xl"
              loading="eager"
            />
            <!-- Overlay gradient -->
            <div class="absolute inset-2 bg-gradient-to-b from-transparent via-transparent to-slate-900/20 rounded-2xl"></div>
          </div>
          
          <!-- Floating elements -->
          <div class="absolute -top-6 -right-6 w-24 h-24 bg-gradient-to-br from-blue-500/20 to-indigo-500/20 rounded-full blur-xl"></div>
          <div class="absolute -bottom-6 -left-6 w-32 h-32 bg-gradient-to-tr from-purple-500/20 to-blue-500/20 rounded-full blur-xl"></div>
        </div>
      </div>
    </div>
  </section>

  <!-- Project Details Section -->
  <section class="py-16 lg:py-24 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-12">
        
        <!-- Main Content -->
        <div class="lg:col-span-2 space-y-12">
          
          <!-- About This Project -->
          <div class="space-y-6">
            <h2 class="text-3xl font-black text-slate-900">
              {t('project_detail.sections.about_title')}
            </h2>
            <div class="prose prose-lg prose-slate max-w-none">
              <p class="text-slate-600 leading-relaxed">
                {localizedProject.description}
              </p>
              
              <!-- Extended description based on category -->
              {localizedProject.category === 'agro' && (
                <p class="text-slate-600 leading-relaxed">
                  {t('project_detail.extended_descriptions.agro')}
                </p>
              )}
              {localizedProject.category === 'jovenes' && (
                <p class="text-slate-600 leading-relaxed">
                  {t('project_detail.extended_descriptions.jovenes')}
                </p>
              )}
              {localizedProject.category === 'store' && (
                <p class="text-slate-600 leading-relaxed">
                  {t('project_detail.extended_descriptions.store')}
                </p>
              )}
              {localizedProject.category === 'makers' && (
                <p class="text-slate-600 leading-relaxed">
                  {t('project_detail.extended_descriptions.makers')}
                </p>
              )}
              {localizedProject.category === 'software' && (
                <p class="text-slate-600 leading-relaxed">
                  {t('project_detail.extended_descriptions.software')}
                </p>
              )}
            </div>
          </div>

          <!-- Features Section -->
          <div class="space-y-6">
            <h3 class="text-2xl font-bold text-slate-900">
              {t('project_detail.sections.features_title')}
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              {Array.from({length: 4}).map((_, index) => (
                <div class="bg-gradient-to-br from-slate-50 to-blue-50 rounded-2xl p-6 border border-slate-100">
                  <div class="flex items-start space-x-4">
                    <div class="w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center">
                      <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                    </div>
                    <div>
                      <h4 class="font-semibold text-slate-900 mb-2">
                        {t(`project_detail.features.feature_${index + 1}.title`)}
                      </h4>
                      <p class="text-sm text-slate-600">
                        {t(`project_detail.features.feature_${index + 1}.description`)}
                      </p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

        </div>

        <!-- Sidebar -->
        <div class="space-y-8">
          
          <!-- Project Info Card -->
          <div class="bg-gradient-to-br from-slate-50 to-blue-50 rounded-3xl p-8 border border-slate-100 shadow-lg">
            <h3 class="text-xl font-bold text-slate-900 mb-6">
              {t('project_detail.sidebar.project_info')}
            </h3>
            
            <div class="space-y-4">
              <!-- Category -->
              <div class="flex justify-between items-center">
                <span class="text-slate-600 font-medium">{t('project_detail.sidebar.category')}</span>
                <span class="font-semibold text-slate-900">
                  {localizedProject.category === 'agro' && t('ProjectCard.Agro')}
                  {localizedProject.category === 'jovenes' && t('ProjectCard.Youngs')}
                  {localizedProject.category === 'store' && t('ProjectCard.Store')}
                  {localizedProject.category === 'makers' && t('ProjectCard.Makers')}
                  {localizedProject.category === 'software' && t('ProjectCard.Software')}
                </span>
              </div>
              
              <!-- Status -->
              <div class="flex justify-between items-center">
                <span class="text-slate-600 font-medium">{t('project_detail.sidebar.status')}</span>
                <div class="flex items-center space-x-2">
                  <div class="w-2 h-2 bg-emerald-500 rounded-full animate-pulse"></div>
                  <span class="font-semibold text-emerald-600">{t('ProjectCard.Active')}</span>
                </div>
              </div>
              
              <!-- Technologies -->
              <div>
                <span class="text-slate-600 font-medium block mb-3">{t('project_detail.sidebar.technologies')}</span>
                <div class="flex flex-wrap gap-2">
                  {localizedProject.tags.map((tag: string) => (
                    <span class="bg-white text-slate-700 px-2 py-1 rounded-lg text-xs font-medium border border-slate-200">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <!-- Contact CTA -->
          <div class="bg-gradient-to-br from-blue-600 to-indigo-700 rounded-3xl p-8 text-white shadow-xl">
            <h3 class="text-xl font-bold mb-4">
              {t('project_detail.sidebar.cta.title')}
            </h3>
            <p class="text-blue-100 mb-6 leading-relaxed">
              {t('project_detail.sidebar.cta.description')}
            </p>
            <a 
              href={getLocalizedLink('/contactanos')}
              class="inline-flex items-center space-x-2 bg-white text-blue-600 px-6 py-3 rounded-xl font-semibold transition-all duration-300 hover:bg-blue-50 hover:scale-105 shadow-lg"
            >
              <span>{t('project_detail.sidebar.cta.button')}</span>
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
              </svg>
            </a>
          </div>

        </div>
      </div>
    </div>
  </section>

  <!-- Related Projects Section -->
  {relatedProjects.length > 0 && (
    <section class="py-16 lg:py-24 bg-gradient-to-b from-slate-50 to-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-black text-slate-900 mb-4">
            {t('project_detail.related_projects.title')}
          </h2>
          <p class="text-lg text-slate-600 max-w-2xl mx-auto">
            {t('project_detail.related_projects.description')}
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedProjects.map((relatedProject) => (
            <a 
              href={getLocalizedLink(`/proyecto/${relatedProject.id}`)}
              class="group block bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-2 overflow-hidden border border-gray-100"
            >
              <div class="relative h-48 overflow-hidden">
                <img 
                  src={getThematicImage(relatedProject.category)}
                  alt={relatedProject.title}
                  class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
                />
                <div class="absolute inset-0 bg-gradient-to-b from-transparent to-slate-900/20"></div>
              </div>
              
              <div class="p-6">
                <h3 class="font-bold text-slate-900 group-hover:text-blue-600 transition-colors duration-200 mb-2">
                  {relatedProject.title}
                </h3>
                <p class="text-slate-600 text-sm line-clamp-2 mb-4">
                  {relatedProject.description}
                </p>
                <div class="flex items-center justify-between">
                  <span class="text-xs font-medium text-slate-500 bg-slate-100 px-2 py-1 rounded-lg">
                    {relatedProject.category === 'agro' && t('ProjectCard.Agro')}
                    {relatedProject.category === 'jovenes' && t('ProjectCard.Youngs')}
                    {relatedProject.category === 'store' && t('ProjectCard.Store')}
                    {relatedProject.category === 'makers' && t('ProjectCard.Makers')}
                    {relatedProject.category === 'software' && t('ProjectCard.Software')}
                  </span>
                  <svg class="w-4 h-4 text-blue-600 transition-transform duration-200 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                  </svg>
                </div>
              </div>
            </a>
          ))}
        </div>
        
        <div class="text-center mt-12">
          <a 
            href={getLocalizedLink('/producto')}
            class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white px-8 py-4 rounded-2xl font-bold transition-all duration-300 shadow-xl hover:shadow-2xl hover:-translate-y-1"
          >
            <span>{t('project_detail.related_projects.view_all')}</span>
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
            </svg>
          </a>
        </div>
      </div>
    </section>
  )}

</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .prose p:last-child {
    margin-bottom: 0;
  }
</style>
