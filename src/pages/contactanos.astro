---
import BaseLayout from '@/layouts/BaseLayout.astro';
import ContactModel from '@/components/ContactModel.astro';
import infoData from '@/data/info';

// Logic for determining the backend URL
function getBackendUrl() {
  if (import.meta.env.PUBLIC_BACKEND_URL) {
    return import.meta.env.PUBLIC_BACKEND_URL;
  }
  if (import.meta.env.PROD) {
    return ''; 
  }
  return 'http://localhost:8000';
}
const backendUrl = getBackendUrl();
---

<BaseLayout 
  title="Contacto - Elipson Synergy" 
  description="Ponte en contacto con Elipson Synergy. Estamos listos para ayudarte a transformar tus ideas en realidad digital."
>
  
  <section class="relative z-10 overflow-hidden bg-white py-20 lg:py-[120px]" id="contact">
    <div class="container mx-auto px-4">
      <div class="-mx-4 flex flex-wrap lg:justify-between items-center"> <!-- Añadido items-center para alineación vertical -->
        <div class="w-full px-4 lg:w-1/2 xl:w-6/12">
          <div class="mb-12 max-w-[570px] lg:mb-0 lg:pt-6"> <!-- Añadido pt-6 para subir el contenido -->
            <span class="mb-4 block text-base font-semibold text-blue-600">
              Contáctanos
            </span>
            <h1 class="mb-4 text-4xl font-bold uppercase text-gray-900 sm:text-[40px] lg:text-[36px] xl:text-[40px]"> <!-- Reducido mb-6 a mb-4 -->
              PONTE EN CONTACTO CON NOSOTROS
            </h1>
            <p class="mb-6 text-base leading-relaxed text-gray-600"> <!-- Reducido mb-9 a mb-6 -->
              Agradecemos tu mensaje y nos comprometemos a brindarte la mejor atención. Revisaremos tu solicitud y nos comunicaremos contigo pronto. Valoramos tu tiempo y apreciamos la oportunidad de ayudarte.
            </p>

            <div class="space-y-6">
              <!-- Ubicación -->
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-14 h-14 bg-blue-50 rounded-lg flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                </div>
                <div>
                  <h3 class="font-bold text-gray-800 text-lg">Nuestra Ubicación</h3>
                  <p class="text-gray-600">{infoData.location}</p>
                </div>
              </div>
              
              <!-- Teléfono -->
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-14 h-14 bg-blue-50 rounded-lg flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                </div>
                <div>
                  <h3 class="font-bold text-gray-800 text-lg">Número de Teléfono</h3>
                  <p class="text-gray-600">{infoData.tel}</p>
                </div>
              </div>
              
              <!-- Email -->
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-14 h-14 bg-blue-50 rounded-lg flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                </div>
                <div>
                  <h3 class="font-bold text-gray-800 text-lg">Correo Electrónico</h3>
                  <p class="text-gray-600">{infoData.mail}</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="w-full px-4 lg:w-1/2 xl:w-5/12">
          <div class="relative rounded-2xl bg-white p-8 shadow-lg sm:p-10">
            <form id="contact-form" class="space-y-6" novalidate>
              <div>
                <input
                  type="text"
                  id="name"
                  name="name"
                  placeholder="Tu nombre"
                  class="w-full rounded border border-gray-300 px-4 py-3 text-base text-gray-700 outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-colors"
                  required
                  maxlength="50"
                />
                <p id="name-error" class="mt-2 hidden text-sm text-red-600"></p>
              </div>
              <div>
                <input
                  type="email"
                  id="email"
                  name="email"
                  placeholder="Tu correo"
                  class="w-full rounded border border-gray-300 px-4 py-3 text-base text-gray-700 outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-colors"
                  required
                  maxlength="100"
                />
                <p id="email-error" class="mt-2 hidden text-sm text-red-600"></p>
              </div>
              <div>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  placeholder="Tu teléfono"
                  class="w-full rounded border border-gray-300 px-4 py-3 text-base text-gray-700 outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-colors"
                  maxlength="20"
                />
                <p id="phone-error" class="mt-2 hidden text-sm text-red-600"></p>
              </div>
              <div>
                <textarea
                  rows="4"
                  id="message"
                  name="message"
                  placeholder="Déjanos tu mensaje"
                  class="w-full rounded border border-gray-300 px-4 py-3 text-base text-gray-700 outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-colors resize-none"
                  required
                  maxlength="1000"
                ></textarea>
                <div class="text-right text-xs text-gray-500 mt-1">
                  <span id="message-counter">0/1000</span>
                </div>
                <p id="message-error" class="mt-2 hidden text-sm text-red-600"></p>
              </div>
              <div>
                <button
                  type="submit"
                  id="submit-btn"
                  class="w-full rounded border border-blue-600 bg-blue-600 p-3 text-white font-medium transition hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-70 disabled:cursor-not-allowed"
                >
                  Enviar Mensaje
                </button>
              </div>
            </form>
            
            <!-- Elementos decorativos -->
            <span class="absolute -right-9 -top-10 z-[-1]">
              <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M0 100C0 44.7715 0 0 0 0C55.2285 0 100 44.7715 100 100C100 100 100 100 0 100Z" fill="#3b82f6" fill-opacity="0.1"/>
              </svg>
            </span>
            <span class="absolute -right-10 top-[90px] z-[-1]">
              <svg width="34" height="134" viewBox="0 0 34 134" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="31.9993" cy="132" r="1.66667" transform="rotate(180 31.9993 132)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="117.333" r="1.66667" transform="rotate(180 31.9993 117.333)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="102.667" r="1.66667" transform="rotate(180 31.9993 102.667)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="88" r="1.66667" transform="rotate(180 31.9993 88)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="73.3333" r="1.66667" transform="rotate(180 31.9993 73.3333)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="45" r="1.66667" transform="rotate(180 31.9993 45)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="16" r="1.66667" transform="rotate(180 31.9993 16)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="59" r="1.66667" transform="rotate(180 31.9993 59)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="30.6666" r="1.66667" transform="rotate(180 31.9993 30.6666)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="31.9993" cy="1.66665" r="1.66667" transform="rotate(180 31.9993 1.66665)" fill="#3b82f6" fill-opacity="0.1"/>
              </svg>
            </span>
            <span class="absolute -bottom-7 -left-7 z-[-1]">
              <svg width="107" height="134" viewBox="0 0 107 134" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="104.999" cy="132" r="1.66667" transform="rotate(180 104.999 132)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="117.333" r="1.66667" transform="rotate(180 104.999 117.333)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="102.667" r="1.66667" transform="rotate(180 104.999 102.667)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="88" r="1.66667" transform="rotate(180 104.999 88)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="73.3333" r="1.66667" transform="rotate(180 104.999 73.3333)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="45" r="1.66667" transform="rotate(180 104.999 45)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="16" r="1.66667" transform="rotate(180 104.999 16)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="59" r="1.66667" transform="rotate(180 104.999 59)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="30.6666" r="1.66667" transform="rotate(180 104.999 30.6666)" fill="#3b82f6" fill-opacity="0.1"/>
                <circle cx="104.999" cy="1.66665" r="1.66667" transform="rotate(180 104.999 1.66665)" fill="#3b82f6" fill-opacity="0.1"/>
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <ContactModel backendUrl={backendUrl} />

  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contact-form');
      const submitBtn = document.getElementById('submit-btn');
      const modal = document.getElementById('contact-modal');
      const loadingOverlay = document.getElementById('loading-overlay');
      const contactComponent = document.getElementById('contact-component');
      const backendUrl = contactComponent?.dataset.backendUrl || 'http://localhost:8000';

      if (!form || !submitBtn || !modal || !loadingOverlay) {
        console.error('Error: No se encontraron todos los elementos del formulario de contacto.');
        return;
      }
      
      const modalContent = document.getElementById('modal-content');
      const closeBtn = document.getElementById('modal-close');
      const okBtn = document.getElementById('modal-ok-btn');
      let isSubmitting = false;

      // --- UI Functions ---
      const showLoading = (show) => {
        loadingOverlay.classList.toggle('hidden', !show);
      };

      const showModal = (title, message, isSuccess) => {
        const modalTitle = modal.querySelector('#modal-title');
        const modalMessage = modal.querySelector('#modal-message');
        const successIcon = modal.querySelector('#success-icon');
        const errorIcon = modal.querySelector('#error-icon');

        if(modalTitle) modalTitle.textContent = title;
        if(modalMessage) modalMessage.textContent = message;
        successIcon?.classList.toggle('hidden', !isSuccess);
        errorIcon?.classList.toggle('hidden', isSuccess);
        
        modal.classList.remove('hidden');
        setTimeout(() => modalContent.classList.remove('scale-95', 'opacity-0'), 10);
      };

      const hideModal = () => {
        modalContent.classList.add('scale-95', 'opacity-0');
        setTimeout(() => modal.classList.add('hidden'), 300);
      };

      // --- Validation ---
      const showError = (fieldId, message) => {
        const errorElement = document.getElementById(`${fieldId}-error`);
        if(errorElement) {
            errorElement.textContent = message;
            errorElement.classList.remove('hidden');
        }
      };

      const clearErrors = () => {
        document.querySelectorAll('p[id$="-error"]').forEach(p => p.classList.add('hidden'));
      };

      const validateForm = () => {
        clearErrors();
        let isValid = true;
        const name = form.elements.name.value.trim();
        const email = form.elements.email.value.trim();
        const message = form.elements.message.value.trim();

        if (name.length < 2) {
          showError('name', 'El nombre es demasiado corto.');
          isValid = false;
        }
        if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
          showError('email', 'Por favor, introduce un correo válido.');
          isValid = false;
        }
        if (message.length < 10) {
          showError('message', 'El mensaje debe tener al menos 10 caracteres.');
          isValid = false;
        } else if (message.length > 1000) {
          showError('message', 'El mensaje no puede exceder los 1000 caracteres.');
          isValid = false;
        }
        return isValid;
      };

      // --- Events ---
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        if (!validateForm() || isSubmitting) return;

        isSubmitting = true;
        submitBtn.disabled = true;
        showLoading(true);

        const formData = {
          name: form.elements.name.value,
          email: form.elements.email.value,
          phone: form.elements.phone.value,
          message: form.elements.message.value,
        };

        try {
          const response = await fetch(`${backendUrl}/api/contact`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData),
          });

          if (!response.ok) {
            throw new Error(`Error del servidor: ${response.status}`);
          }
          
          showModal('¡Mensaje Enviado!', 'Gracias por contactarnos. Te responderemos lo antes posible.', true);
          form.reset();
          document.getElementById('message-counter').textContent = '0/1000';

        } catch (error) {
          console.error('Error al enviar el formulario:', error);
          showModal('Error', 'Hubo un problema al enviar tu mensaje. Por favor, inténtalo de nuevo más tarde.', false);
        } finally {
          isSubmitting = false;
          submitBtn.disabled = false;
          showLoading(false);
        }
      });

      closeBtn?.addEventListener('click', hideModal);
      okBtn?.addEventListener('click', hideModal);

      // Character counter
      const messageField = document.getElementById('message');
      const counter = document.getElementById('message-counter');
      messageField?.addEventListener('input', () => {
          counter.textContent = `${messageField.value.length}/1000`;
      });
    });
  </script>
</BaseLayout>